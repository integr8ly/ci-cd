#!groovy

//Helper methods, should eventually be moved to a shared library
//https://github.com/comquent/imperative-when
import org.jenkinsci.plugins.pipeline.modeldefinition.Utils

def when(boolean condition, body) {
    def config = [:]
    body.resolveStrategy = Closure.OWNER_FIRST
    body.delegate = config

    if (condition) {
        body()
    } else {
        Utils.markStageSkippedForConditional(STAGE_NAME)
    }
}
//Helpers

String githubEventStr = params.sqs_body
String gitBranch = ""
boolean isGABranch = false

currentBuild.description = "sqsMessageId: ${params.sqs_messageId}"

node('cirhos_rhel7') {
    cleanWs()
    stage('Parse GitHub Event') {
        def ghEvent = readJSON text: githubEventStr
        gitBranch = ghEvent['ref'].tokenize('/').last()
        isGABranch = gitBranch.endsWith("-ga")
        isRCBranch = gitBranch.endsWith("-rc")
        isLatestBranch = gitBranch.endsWith("-latest")
        currentBuild.description = "${currentBuild.description}\nbranch: ${gitBranch}"
    }

    stage('Trigger ga branch job') {
        when(isGABranch || isRCBranch || isLatestBranch) {
            def branchType = gitBranch.split("-").last()
            def productName = gitBranch.minus("-${branchType}")
            jobName = "delorean-${productName}/${branchType}/branch"
            build job: jobName, wait: false
        }
    }

}
