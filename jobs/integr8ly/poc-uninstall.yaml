---

- job:
    name: poc-uninstall
    project-type: pipeline
    description: "Uninstalls Integreatly remotely from QE Pony cluster by executing Ansible uninstallation playbook."
    sandbox: false
    concurrent: false
    parameters:
        - string:
            name: REPOSITORY
            default: https://github.com/integr8ly/installation.git
            description: "Repository of the Integreatly installer"
        - string:
            name: BRANCH
            default: 'master'
            description: "Branch of the installer repository"
        - string:
            name: CLUSTER_URL
            description: "URL of cluster for uninstallation."
        - string:
            name: ANSIBLE_USER
            default: root
            description: "User for Ansible to access the master node of target cluster"
        - string:
            name: MASTER_URLS
            description: "Comma separated list of URLs for master nodes of target cluster to be used in Ansible inventory file"
        - string:
            name: OC_USER
            description: "OpenShift user for QE cluster."
        - string:
            name: OC_PASSWORD
            description: "OpenShift password for QE cluster."
        - string:
            name: NAMESPACE_PREFIX
            default: openshift-
            description: "This value will be used to define the prefix of the names of the namespaces deleted during uninstallation"
    dsl: |
        timeout(60) { ansiColor('gnome-terminal') { timestamps {
            node('cirhos_rhel7') {        
                stage('Verify input') {
                    if (!MASTER_URLS) {
                        throw new hudson.AbortException('MASTER_URLS parameter is required!')
                    }
                    if (!CLUSTER_URL) {
                        throw new hudson.AbortException('CLUSTER_URL parameter is required!')
                    }
                    if (!OC_USER) {
                        throw new hudson.AbortException('OC_USER parameter is required!')
                    }
                    if (!OC_PASSWORD) {
                        throw new hudson.AbortException('OC_PASSWORD parameter is required!')
                    }
                }

                stage('Clone the installer') {
                    dir('installation') {
                        checkout([
                            $class: 'GitSCM',
                            branches: [[name: BRANCH]],,
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [],
                            userRemoteConfigs: [[url: REPOSITORY]]
                        ])

                        sh "git clean -xdf"

                        if(!fileExists("evals")) {
                            sh "ln -s . evals"
                        }
                    } // dir
                } // stage

                stage('Prepare environment') {
                    dir('installation') {
                        sh """
                            cp ./evals/inventories/hosts.template ./evals/inventories/hosts
                            sed -i 's/ansible_user=ec2-user/ansible_user=${ANSIBLE_USER}/g' ./evals/inventories/hosts
                        """
                    
                        String masterUrls = MASTER_URLS.replaceAll(~/,[\s]*/, '\\\\n')
                    
                        sh """
                            sed -i '\$!N;s@\\[master\\]\\n127.0.0.1@[master]\\n${masterUrls}@;P;D' ./evals/inventories/hosts
                        """
                    
                        String output = readFile('./evals/inventories/hosts')
                        println output
                    } // dir
                } // stage
            
                stage('Execute playbook') {
                    dir('installation/evals') {
                        sh """
                            sudo ansible-playbook -i ./inventories/hosts ./playbooks/uninstall.yml -e create_cluster_admin=false -e openshift_login=true -e openshift_username=${OC_USER} -e openshift_password=${OC_PASSWORD} -e openshift_master_public_url=${CLUSTER_URL} -e ns_prefix=${NAMESPACE_PREFIX}
                        """
                     } // dir
                } // stage
            } // node
        }}} // timeout, ansiColor, timestamps
