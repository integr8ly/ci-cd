---

- job:
    name: openshift4-rhmi-install
    display-name: OpenShift 4 RHMI install
    project-type: pipeline
    description: "Installs RHMI on OpenShift 4 cluster"
    sandbox: false
    concurrent: true
    parameters:
        - string:
            name: CLUSTER_NAME
            description: "City or customer for RHPDS cluster, for example qe-ocp4-[hash] or cluster name specified when creating it using openshift-install"
        - string:
            name: CLUSTER_DOMAIN
            default: 'open.redhat.com'
            description: "Cluster domain - open.redhat.com or example.opentlc.com for RHPDS clusters and intlyqe.com for clusters created using openshift-install"
        - bool:
            name: PDS_CLUSTER
            default: false
            description: "Indicates whether the cluster was provisioned using RHPDS"
        - string:
            name: ADMIN_USERNAME
            default: 'kubeadmin'
            description: "Admin username for the OpenShift 4 cluster"
        - string:
            name: ADMIN_PASSWORD
            default: ''
            description: "Admin password for OpenShift 4 cluster"
        - string:
            name: INTEGREATLY_OPERATOR_REPOSITORY
            default: 'https://github.com/integr8ly/integreatly-operator.git'
            description: "Repository of the Integreatly Operator"
        - string:
            name: INTEGREATLY_OPERATOR_BRANCH
            default: 'master'
            description: "Branch of the Integreatly Operator repository"
        - string:
            name: RECIPIENTS
            default: ''
            description: "Whitespace- or comma-separated list of recipient addresses"
    dsl: |
        Boolean isPds = params.PDS_CLUSTER

        String clusterSuffix = isPds ? "cluster-${CLUSTER_NAME}.${CLUSTER_NAME}.${CLUSTER_DOMAIN}" : "${CLUSTER_NAME}.${CLUSTER_DOMAIN}"
        
        String clusterAPI = "https://api.${clusterSuffix}:6443"

        def err = null

        node('cirhos_rhel7') {
            timeout(75) { ansiColor('gnome-terminal') { timestamps {
                try {
                    currentBuild.displayName = "${currentBuild.displayName} ${CLUSTER_NAME}"
                    stage('Login to OpenShift 4 cluster') {

                        sh "oc login ${clusterAPI} --insecure-skip-tls-verify=true -u ${ADMIN_USERNAME} -p ${ADMIN_PASSWORD}"
                    } // stage

                    stage('Install RHMI') {
                        dir('integreatly-operator') {
                            checkout([
                                $class: 'GitSCM',
                                branches: [[name: INTEGREATLY_OPERATOR_BRANCH]],
                                doGenerateSubmoduleConfigurations: false,
                                extensions: [],
                                userRemoteConfigs: [[url: INTEGREATLY_OPERATOR_REPOSITORY]]
                            ])

                            sh "make test/e2e/olm"
                        } // dir
                    } // stage                 
                } catch (caughtError){
                    currentBuild.result = 'FAILURE'
                    err = caughtError
                } finally {
                    notifyBuild(currentBuild.result, err)
                }
            }}} // timeout, ansiColor, timestamps
        } // node

        def notifyBuild(String buildStatus, err) {
            if (params.RECIPIENTS.toString().length() > 0) {
                buildStatus =  buildStatus ?: "SUCCESS"
            
                String mailRecipients = "${RECIPIENTS}"
                String subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
                String body = "${subject}\n\n(${env.BUILD_URL})"
            
                if (err != null) {
                    body = "${body}\n\n FAILURE was ${err}"
                }
            
                mail body: body, subject: subject, to: mailRecipients   
            }
        }
